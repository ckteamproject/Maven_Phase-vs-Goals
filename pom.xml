<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0
           https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>com.example</groupId>
  <artifactId>maven-phases-vs-goals</artifactId>
  <version>1.0-SNAPSHOT</version>
  <packaging>jar</packaging>

  <properties>
    <!-- Use release to avoid module-path warning with Java 17 -->
    <maven.compiler.release>17</maven.compiler.release>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <main.class>com.example.App</main.class>
  </properties>

  <dependencies>
    <!-- JUnit 5 (Jupiter) for test compilation and execution -->
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>5.10.0</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <build>
    <plugins>

      <!-- Compiler plugin (use release) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <version>3.11.0</version>
        <configuration>
          <release>${maven.compiler.release}</release>
        </configuration>
      </plugin>

      <!-- Resources plugin (process-resources) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <version>3.3.1</version>
        <executions>
          <execution>
            <id>copy-info-txt</id>
            <phase>process-resources</phase>
            <goals><goal>resources</goal></goals>
          </execution>
        </executions>
      </plugin>

      <!-- JAR plugin (use default execution; only supply manifest config) -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.4.0</version>
        <configuration>
          <archive>
            <manifest>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
              <addClasspath>true</addClasspath>
              <mainClass>${main.class}</mainClass>
            </manifest>
          </archive>
        </configuration>
      </plugin>

      <!-- Exec plugin bound to verify (runs after package) -->
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>run-after-package</id>
            <phase>verify</phase> <!-- changed to verify -->
            <goals>
              <goal>java</goal>
            </goals>
            <configuration>
              <mainClass>${main.class}</mainClass>

              <!-- ensure runtime classpath (project classes + dependencies) is used -->
              <classpathScope>runtime</classpathScope>
              <includeProjectDependencies>true</includeProjectDependencies>

              <!-- explicitly add project's output directory to classpath -->
              <additionalClasspathElements>
                <additionalClasspathElement>${project.build.outputDirectory}</additionalClasspathElement>
              </additionalClasspathElements>

              <arguments>
                <argument>ran-at-package</argument>
              </arguments>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Antrun plugin for validate and verify -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-antrun-plugin</artifactId>
        <version>3.1.0</version>
        <executions>
          <execution>
            <id>validate-step</id>
            <phase>validate</phase>
            <goals><goal>run</goal></goals>
            <configuration>
              <target>
                <echo>ANTRUN: validate-phase - creating target/validate.txt</echo>
                <mkdir dir="${project.build.directory}"/>
                <echo message="validated" file="${project.build.directory}/validate.txt"/>
              </target>
            </configuration>
          </execution>

          <execution>
            <id>verify-step</id>
            <phase>verify</phase>
            <goals><goal>run</goal></goals>
            <configuration>
              <target>
                <echo>ANTRUN: verify-phase - creating target/verify.txt</echo>
                <echo message="verified OK" file="${project.build.directory}/verify.txt"/>
              </target>
            </configuration>
          </execution>
        </executions>
      </plugin>

      <!-- Surefire plugin to run JUnit 5 tests -->
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>3.1.2</version>
        <configuration>
          <!-- helpful for avoiding module-classpath issues with some JDK setups -->
          <useModulePath>false</useModulePath>
        </configuration>
      </plugin>

    </plugins>
  </build>
</project>
